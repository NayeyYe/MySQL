SET SESSION TRANSACTION ISOLATION LEVEL
	SERIALIZABLE					//可序列化
	| REPEATABLE READ					//可重复读
	| READ COMMITTED					//提交读
	| READ UNCOMMITTED				//未提交读

一.事务处理
建立两个连接。
1. isolation 设置为 read uncommited时，脏读的情况。
1）在一个连接A中，设置transaction isolation 设置为 read-uncommited；
2）连接A中开始事务，显示employees表中所有员工信息，观察记录的数目；
3）在另一个连接B中，取消自动提交set @@autocommit=0，在employees表插入一条记录；
4）在连接A中显示employees表的员工信息，观察记录的数目；
5）在连接B中回滚事务；
6）在连接A再次显示employees表中所有员工信息，观察记录的数目；
7）在连接A提交事务。
结论：

2.观察 @@transaction_isolation 设置为 read-commited时，不可重复读的情况。
1）在一个连接A中，设置transaction isolation 设置为 read-commited；
2）连接A中开始事务，显示employees表中所有员工信息，观察记录的数目；
3）在另一个连接B中，自动提交set @@autocommit=0，在employees表插入一条记录；
4）在连接A中显示employees表的员工信息，观察记录的数目；
5）在连接B中回滚事务；
6）在连接A中显示employees表的员工信息，观察记录的数目；
7）在另一个连接B中，在employees表再插入记录，并提交；
8）在连接A中显示employees表的员工信息，观察记录的数目；
9）在连接A提交事务。
结论：

3.观察 transaction_isolation 设置为 repeatable read时，幻读的情况。
1）在一个连接A中，设置transaction isolation 设置为 repeatable-read；
2）开始事务，显示employees表中所有员工信息，观察记录的数目；
3）在另一个连接B中，自动提交set @@autocommit=1，在employees表插入一条记录；
4）在连接A中显示employees表的员工信息，观察记录的数目；
5）在连接A中提交事务；
6）在连接A再次显示employees表中所有员工信息，观察记录的数目；
结论：

4.观察 transaction isolation 设置为 serializable时的情况。
1）在一个连接A中，transaction isolation 设置为 serializable；
2）开始事务，显示employees表中所有员工信息，观察记录的数目；
3）在另一个连接B中，在employees表插入一条记录，并提交事务，观察执行情况；
4）在连接A中显示employees表的员工信息，观察记录的数目；
5）在连接A中提交事务；
6）在连接A再次显示employees表中所有员工信息，观察记录的数目；
结论：

二、使用命令完成如下操作，将所使用的命令复制到实验报告，
并上交。
1、创建视图
（1）在 YGGL 数据库创建视图 ds_view，视图包含 Departments
表的全部列。
（2）在 YGGL 数据库创建视图 Employees_view，视图包含员工
号码、姓名和实际收入。
2、查询视图
（1）从视图 ds_view 中查询出部门号为 3 的部门名称。
（2）从视图 Employees_view 中查询出姓名为“王林”的员工的实
际收入。